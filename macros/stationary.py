import numpy as np

C = np.array([
             [0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.25, 0.00, 0.25, 0.00, 0.25, 0.25, 0.00, 0.00, 0.00, 0.00],
             [0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.25, 0.00, 0.25, 0.25, 0.25, 0.00, 0.00, 0.00, 0.00],
             [0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.25, 0.00, 0.25, 0.00, 0.00, 0.00, 0.25, 0.25, 0.00, 0.00],
             [0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.25, 0.00, 0.25, 0.00, 0.00, 0.25, 0.25, 0.00, 0.00],
             [0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.25, 0.00, 0.25, 0.00, 0.00, 0.00, 0.00, 0.00, 0.25, 0.25],
             [0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.25, 0.00, 0.25, 0.00, 0.00, 0.00, 0.00, 0.25, 0.25],
             [0.17, 0.00, 0.17, 0.00, 0.17, 0.00, 0.00, 0.00, 0.00, 0.00, 0.17, 0.00, 0.17, 0.00, 0.17, 0.00],
             [0.00, 0.17, 0.00, 0.17, 0.00, 0.17, 0.00, 0.00, 0.00, 0.00, 0.17, 0.00, 0.17, 0.00, 0.17, 0.00],
             [0.17, 0.00, 0.17, 0.00, 0.17, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.17, 0.00, 0.17, 0.00, 0.17],
             [0.00, 0.17, 0.00, 0.17, 0.00, 0.17, 0.00, 0.00, 0.00, 0.00, 0.00, 0.17, 0.00, 0.17, 0.00, 0.17],
             [0.25, 0.25, 0.00, 0.00, 0.00, 0.00, 0.25, 0.25, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00],
             [0.25,	0.25, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.25, 0.25, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00],
             [0.00, 0.00, 0.25, 0.25, 0.00, 0.00, 0.25, 0.25, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00],
             [0.00, 0.00, 0.25, 0.25, 0.00, 0.00, 0.00, 0.00, 0.25, 0.25, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00],
             [0.00, 0.00, 0.00, 0.00, 0.25, 0.25, 0.25, 0.25, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00],
             [0.00, 0.00, 0.00, 0.00, 0.25, 0.25, 0.00, 0.00, 0.25, 0.25, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00]
])

# identity matrix
I = np.eye(16)

alpha = 0.2
A = alpha * C + (1 - alpha) * I

# Solve (A - I)v = 0
eigvals, eigvecs = np.linalg.eig(A.T)
stationary = eigvecs[:, np.isclose(eigvals, 1)].flatten()
stationary = stationary / stationary.sum()  # Normalize
print(stationary)
# eigenvalues
print(eigvals)
# sort
print("Second eigenvalue:")
print(np.sort(eigvals)[::-1][1].round(3))
print("(1-alpha)/2")
print(1-alpha/2)

C_eigvals, C_eigvecs = np.linalg.eig(C.T)
print(np.sort(C_eigvals)[::-1].round(3))